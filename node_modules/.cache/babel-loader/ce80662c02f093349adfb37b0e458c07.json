{"ast":null,"code":"import { MapLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\"; // import \"lrm-google\";\n\nimport { withLeaflet } from \"react-leaflet\";\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nclass Routing extends MapLayer {\n  createLeafletElement() {\n    const {\n      map\n    } = this.props;\n    let leafletElement = L.Routing.control({\n      router: L.Routing.mapbox(accessToken, {\n        unit: 'metric',\n        profile: 'mapbox/driving',\n        language: 'en',\n        alternatives: true,\n        geometries: 'geojson',\n        controls: {\n          instructions: false\n        },\n        flyTo: false\n      }),\n      waypoints: [L.latLng(16.506, 80.648), L.latLng(17.384, 80.4866), L.latLng(12.971, 77.5945)],\n      // router: new L.Routing.Google(),\n      lineOptions: {\n        styles: [{\n          color: \"blue\",\n          opacity: 0.6,\n          weight: 4\n        }]\n      },\n      addWaypoints: false,\n      draggableWaypoints: true,\n      fitSelectedRoutes: false,\n      showAlternatives: true\n    }).addTo(map.leafletElement);\n    return leafletElement.getPlan();\n  }\n\n}\n\nexport default _c = withLeaflet(Routing);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/RoutingMachine.js"],"names":["MapLayer","L","withLeaflet","accessToken","Routing","createLeafletElement","map","props","leafletElement","control","router","mapbox","unit","profile","language","alternatives","geometries","controls","instructions","flyTo","waypoints","latLng","lineOptions","styles","color","opacity","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","addTo","getPlan"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,yBAAP,C,CACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AAGA,MAAMC,WAAW,GAAG,0FAApB;;AAEA,MAAMC,OAAN,SAAsBJ,QAAtB,CAA+B;AAC7BK,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAU,KAAKC,KAArB;AACA,QAAIC,cAAc,GAAGP,CAAC,CAACG,OAAF,CAAUK,OAAV,CAAkB;AACrCC,MAAAA,MAAM,EAAET,CAAC,CAACG,OAAF,CAAUO,MAAV,CAAiBR,WAAjB,EAA8B;AACpCS,QAAAA,IAAI,EAAE,QAD8B;AAEpCC,QAAAA,OAAO,EAAG,gBAF0B;AAGpCC,QAAAA,QAAQ,EAAE,IAH0B;AAIpCC,QAAAA,YAAY,EAAE,IAJsB;AAKpCC,QAAAA,UAAU,EAAE,SALwB;AAMpCC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAN0B;AAOpCC,QAAAA,KAAK,EAAE;AAP6B,OAA9B,CAD6B;AAUrCC,MAAAA,SAAS,EAAE,CACTnB,CAAC,CAACoB,MAAF,CAAS,MAAT,EAAiB,MAAjB,CADS,EAETpB,CAAC,CAACoB,MAAF,CAAS,MAAT,EAAiB,OAAjB,CAFS,EAGTpB,CAAC,CAACoB,MAAF,CAAS,MAAT,EAAiB,OAAjB,CAHS,CAV0B;AAerC;AACAC,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,KAAK,EAAE,MADT;AAEEC,UAAAA,OAAO,EAAE,GAFX;AAGEC,UAAAA,MAAM,EAAE;AAHV,SADM;AADG,OAhBwB;AAyBrCC,MAAAA,YAAY,EAAE,KAzBuB;AA0BrCC,MAAAA,kBAAkB,EAAE,IA1BiB;AA2BrCC,MAAAA,iBAAiB,EAAE,KA3BkB;AA4BrCC,MAAAA,gBAAgB,EAAE;AA5BmB,KAAlB,EA6BlBC,KA7BkB,CA6BZzB,GAAG,CAACE,cA7BQ,CAArB;AA8BA,WAAOA,cAAc,CAACwB,OAAf,EAAP;AACD;;AAlC4B;;AAoC/B,oBAAe9B,WAAW,CAACE,OAAD,CAA1B","sourcesContent":["import { MapLayer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\n// import \"lrm-google\";\r\nimport { withLeaflet } from \"react-leaflet\";\r\n\r\n\r\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\n\r\nclass Routing extends MapLayer {\r\n  createLeafletElement() {\r\n    const { map } = this.props;\r\n    let leafletElement = L.Routing.control({\r\n      router: L.Routing.mapbox(accessToken, {\r\n        unit: 'metric',\r\n        profile : 'mapbox/driving',\r\n        language: 'en',\r\n        alternatives: true,\r\n        geometries: 'geojson',\r\n        controls: { instructions: false },\r\n        flyTo: false\r\n      }),\r\n      waypoints: [\r\n        L.latLng(16.506, 80.648),\r\n        L.latLng(17.384, 80.4866),\r\n        L.latLng(12.971, 77.5945)\r\n      ],\r\n      // router: new L.Routing.Google(),\r\n      lineOptions: {\r\n        styles: [\r\n          {\r\n            color: \"blue\",\r\n            opacity: 0.6,\r\n            weight: 4\r\n          }\r\n        ]\r\n      },\r\n      addWaypoints: false,\r\n      draggableWaypoints: true,\r\n      fitSelectedRoutes: false,\r\n      showAlternatives: true\r\n    }).addTo(map.leafletElement);\r\n    return leafletElement.getPlan();\r\n  }\r\n}\r\nexport default withLeaflet(Routing);\r\n"]},"metadata":{},"sourceType":"module"}