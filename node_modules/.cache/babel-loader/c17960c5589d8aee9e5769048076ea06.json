{"ast":null,"code":"// import { MapLayer } from \"react-leaflet\";\n// import L from \"leaflet\";\n// import \"leaflet-routing-machine\";\n// // import \"lrm-google\";\n// import { withLeaflet } from \"react-leaflet\";\n// const accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n// class Routing extends MapLayer {\n//   createLeafletElement() {\n//     const { map } = this.props;\n//     let leafletElement = L.Routing.control({\n//       router: L.Routing.mapbox(accessToken, {\n//         unit: 'metric',\n//         profile : 'mapbox/cycling',\n//         language: 'en',\n//         alternatives: true,\n//         geometries: 'geojson',\n//         controls: { instructions: false },\n//         flyTo: false\n//       }),\n//       waypoints: [\n//         L.latLng(16.506, 80.648),\n//         L.latLng(17.384, 80.4866),\n//         L.latLng(12.971, 77.5945)\n//       ],\n//       // router: new L.Routing.Google(),\n//       lineOptions: {\n//         styles: [\n//           {\n//             color: \"gray\",\n//             opacity: 0.7,\n//             weight: 6\n//           }\n//         ]\n//       },\n//       addWaypoints: false,\n//       draggableWaypoints: true,\n//       fitSelectedRoutes: false,\n//       showAlternatives: true\n//     }).addTo(map.leafletElement);\n//     leafletElement.hide();\n//     return leafletElement.getPlan();\n//   }\n// }\n// export default withLeaflet(Routing);","map":{"version":3,"sources":["/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/RoutingMachine.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import { MapLayer } from \"react-leaflet\";\r\n// import L from \"leaflet\";\r\n// import \"leaflet-routing-machine\";\r\n// // import \"lrm-google\";\r\n// import { withLeaflet } from \"react-leaflet\";\r\n\r\n\r\n// const accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\n\r\n// class Routing extends MapLayer {\r\n//   createLeafletElement() {\r\n//     const { map } = this.props;\r\n//     let leafletElement = L.Routing.control({\r\n//       router: L.Routing.mapbox(accessToken, {\r\n//         unit: 'metric',\r\n//         profile : 'mapbox/cycling',\r\n//         language: 'en',\r\n//         alternatives: true,\r\n//         geometries: 'geojson',\r\n//         controls: { instructions: false },\r\n//         flyTo: false\r\n//       }),\r\n//       waypoints: [\r\n//         L.latLng(16.506, 80.648),\r\n//         L.latLng(17.384, 80.4866),\r\n//         L.latLng(12.971, 77.5945)\r\n//       ],\r\n//       // router: new L.Routing.Google(),\r\n//       lineOptions: {\r\n//         styles: [\r\n//           {\r\n//             color: \"gray\",\r\n//             opacity: 0.7,\r\n//             weight: 6\r\n//           }\r\n//         ]\r\n//       },\r\n//       addWaypoints: false,\r\n//       draggableWaypoints: true,\r\n//       fitSelectedRoutes: false,\r\n//       showAlternatives: true\r\n//     }).addTo(map.leafletElement);\r\n//     leafletElement.hide();\r\n\r\n//     return leafletElement.getPlan();\r\n//   }\r\n// }\r\n// export default withLeaflet(Routing);\r\n"]},"metadata":{},"sourceType":"module"}