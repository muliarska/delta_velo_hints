{"ast":null,"code":"var _jsxFileName = \"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/Map.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl, Marker, Popup } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\nimport Routing from \"./RoutingMachine\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport './Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nvar routing = false;\nvar markers = [];\nvar control;\nvar map = NaN;\nvar modal = document.getElementById(\"myModal\");\nvar directionsStart = document.getElementById(\"directionsStart\");\nvar span = document.getElementsByClassName(\"close\")[0];\nvar badRoadReportButton = document.getElementById(\"badRoadReportButton\");\nvar accidentReportButton = document.getElementById(\"accidentReportButton\");\nvar parkingPlaceReportButton = document.getElementById(\"parkingPlaceReportButton\");\nvar closeButtonReport = document.getElementById(\"closeButtonReport\");\nvar cancelRouteButton = document.getElementById('cancelRouteButton');\nvar startMenuButton = document.getElementById('startMenuButton');\nvar startNewRouteButton = document.getElementById(\"startNewRouteButton\");\nvar closeButton = document.getElementById(\"closeButton\");\n\nfunction onLoad(e) {\n  // map.setView([coordinates], 8);\n  loadDirectionsStart();\n}\n\nfunction loadDirectionsStart(e) {\n  directionsStart.style.display = \"block\";\n}\n\nfunction makeReport() {\n  var response = \"\";\n  modal.style.display = \"block\";\n\n  badRoadReportButton.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"badRoadReportButton\");\n    response = \"badRoadReportButton\"; // marker.bindPopup(\"Bad Road\");\n    // marker.setIcon(badRoadIcon);\n  };\n\n  accidentReportButton.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"accidentReportButton\");\n    response = \"accidentReportButton\"; // marker.bindPopup(\"Accident\");\n    // marker.setIcon(accidentIcon);\n  };\n\n  parkingPlaceReportButton.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"parkingPlaceReportButton\");\n    response = \"parkingPlaceReportButton\"; // marker.bindPopup(\"Parking Place\");\n    // marker.setIcon(parkingIcon);\n  };\n\n  closeButtonReport.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"Closing\");\n    marker.remove();\n    startMenuButton.style.display = 'inline-block';\n  };\n\n  return response;\n}\n\nstartNewRouteButton.onclick = function (event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Starting new route\");\n  routing = true;\n};\n\ncloseButton.onclick = function (event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Closing start screen\");\n  startMenuButton.style.display = 'inline-block';\n}; // When the user clicks on <span> (x), close the modal\n\n\nspan.onclick = function () {\n  modal.style.display = \"none\";\n  directionsStart.style.display = \"none\";\n  startMenuButton.style.display = 'inline-block';\n}; // When the user clicks anywhere outside of the modal, close it\n\n\nwindow.onclick = function (event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n\n  if (event.target == directionsStart) {\n    directionsStart.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n};\n\nfunction createRoute(markers) {\n  let leafletElement = L.Routing.control({\n    router: L.Routing.mapbox(accessToken, {\n      unit: 'metric',\n      profile: 'mapbox/cycling',\n      language: 'en',\n      alternatives: true,\n      geometries: 'geojson',\n      controls: {\n        instructions: false\n      },\n      flyTo: false\n    }),\n    waypoints: [L.latLng(markers[0]['position']), L.latLng(markers[1]['position'])],\n    lineOptions: {\n      styles: [{\n        color: \"gray\",\n        opacity: 0.7,\n        weight: 6\n      }]\n    },\n    addWaypoints: false,\n    draggableWaypoints: true,\n    fitSelectedRoutes: false,\n    showAlternatives: true\n  }).addTo(map.leafletElement);\n  leafletElement.hide();\n}\n\nfunction getIcon(name) {\n  return L.icon({\n    iconUrl: require('./marker_icons/' + name + '.png'),\n    iconSize: [40]\n  });\n}\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.saveMap = layer => {\n      map = layer;\n      this.setState({\n        isMapInit: true\n      });\n      onLoad();\n    };\n\n    this.addMarker = e => {\n      // clearGeoResults();\n      console.log('clicked');\n      var coordinates = e.latlng;\n      const {\n        markers\n      } = this.state;\n\n      if (!routing) {\n        makeReport(marker);\n        markers.push({\n          'name': 'route-mark',\n          'position': coordinates\n        });\n      } else {\n        markers.push({\n          'name': 'route-mark',\n          'position': coordinates\n        });\n\n        if (markers.length == 2) {\n          createRoute(markers);\n        }\n      }\n\n      this.setState({\n        markers\n      });\n    };\n\n    this.state = {\n      lat: 49.918313,\n      lng: 24.182573,\n      zoom: 8,\n      isMapInit: false,\n      markers: [{\n        'name': 'badRoad',\n        'position': [49.918313, 24.182573]\n      }]\n    };\n  }\n\n  render() {\n    const {\n      lat,\n      lng,\n      zoom\n    } = this.state;\n    const position = [lat, lng];\n    return /*#__PURE__*/_jsxDEV(Map, {\n      className: \"map\",\n      center: position,\n      zoom: zoom,\n      onClick: this.addMarker,\n      ref: this.saveMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      , {\n        url: \"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), this.state.markers.map((location, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location.position // icon={getIcon(location.name)}\n        ,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, `marker-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/Map.js"],"names":["React","Component","useState","useEffect","Map","TileLayer","withLeaflet","MapControl","Marker","Popup","MapInfo","Routing","L","accessToken","routing","markers","control","map","NaN","modal","document","getElementById","directionsStart","span","getElementsByClassName","badRoadReportButton","accidentReportButton","parkingPlaceReportButton","closeButtonReport","cancelRouteButton","startMenuButton","startNewRouteButton","closeButton","onLoad","e","loadDirectionsStart","style","display","makeReport","response","onclick","event","console","log","marker","remove","window","target","createRoute","leafletElement","router","mapbox","unit","profile","language","alternatives","geometries","controls","instructions","flyTo","waypoints","latLng","lineOptions","styles","color","opacity","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","addTo","hide","getIcon","name","icon","iconUrl","require","iconSize","MapComponent","constructor","saveMap","layer","setState","isMapInit","addMarker","coordinates","latlng","state","push","length","lat","lng","zoom","render","position","location","idx"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl, Marker, Popup } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\nimport Routing from \"./RoutingMachine\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport './Icons'\n\n\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\nvar routing = false;\nvar markers = [];\nvar control;\nvar map = NaN;\n\nvar modal = document.getElementById(\"myModal\");\nvar directionsStart = document.getElementById(\"directionsStart\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nvar badRoadReportButton = document.getElementById(\"badRoadReportButton\");\nvar accidentReportButton = document.getElementById(\"accidentReportButton\");\nvar parkingPlaceReportButton = document.getElementById(\"parkingPlaceReportButton\");\nvar closeButtonReport = document.getElementById(\"closeButtonReport\");\n\n\nvar cancelRouteButton = document.getElementById('cancelRouteButton');\nvar startMenuButton = document.getElementById('startMenuButton');\n\n\nvar startNewRouteButton = document.getElementById(\"startNewRouteButton\");\nvar closeButton = document.getElementById(\"closeButton\");\n\n\nfunction onLoad(e) {\n  // map.setView([coordinates], 8);\n  loadDirectionsStart();\n}\n\nfunction loadDirectionsStart (e) {\n  directionsStart.style.display = \"block\";\n}\n\n\nfunction makeReport() {\n  var response = \"\";\n\n  modal.style.display = \"block\";\n\n  badRoadReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"badRoadReportButton\")\n    response = \"badRoadReportButton\"\n    // marker.bindPopup(\"Bad Road\");\n    // marker.setIcon(badRoadIcon);\n  }\n\n  accidentReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"accidentReportButton\")\n    response = \"accidentReportButton\"\n    // marker.bindPopup(\"Accident\");\n    // marker.setIcon(accidentIcon);\n  }\n\n  parkingPlaceReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"parkingPlaceReportButton\")\n    response = \"parkingPlaceReportButton\"\n    // marker.bindPopup(\"Parking Place\");\n    // marker.setIcon(parkingIcon);\n  }\n\n  closeButtonReport.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"Closing\")\n    marker.remove();\n    startMenuButton.style.display = 'inline-block';\n  }\n\n  return response;\n}\n\n\nstartNewRouteButton.onclick = function(event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Starting new route\");\n  routing = true;\n}\n\ncloseButton.onclick = function(event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Closing start screen\")\n  startMenuButton.style.display = 'inline-block';\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\n  modal.style.display = \"none\";\n  directionsStart.style.display = \"none\";\n  startMenuButton.style.display = 'inline-block';\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n  if (event.target == directionsStart) {\n    directionsStart.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n}\n\n\n\n\n\n\n\n\nfunction createRoute(markers) {\n  let leafletElement = L.Routing.control({\n    router: L.Routing.mapbox(accessToken, {\n      unit: 'metric',\n      profile : 'mapbox/cycling',\n      language: 'en',\n      alternatives: true,\n      geometries: 'geojson',\n      controls: { instructions: false },\n      flyTo: false\n    }),\n    waypoints: [\n      L.latLng(markers[0]['position']),\n      L.latLng(markers[1]['position'])\n    ],\n    lineOptions: {\n      styles: [\n        {\n          color: \"gray\",\n          opacity: 0.7,\n          weight: 6\n        }\n      ]\n    },\n    addWaypoints: false,\n    draggableWaypoints: true,\n    fitSelectedRoutes: false,\n    showAlternatives: true\n  }).addTo(map.leafletElement);\n  leafletElement.hide();\n}\n\n\nfunction getIcon(name) {\n  return L.icon({\n    iconUrl: require('./marker_icons/' + name + '.png'),\n    iconSize: [40]\n  })\n}\n\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: 49.918313,\n      lng: 24.182573,\n      zoom: 8,\n      isMapInit: false,\n\n      markers: [\n        {\n          'name': 'badRoad', \n          'position': [49.918313, 24.182573]\n        }\n      ]\n\n    };\n  };\n\n  \n  saveMap = (layer) => {\n    map = layer;\n    this.setState({\n      isMapInit: true\n    });\n\n    onLoad();\n  };\n\n  addMarker = (e) => {\n    // clearGeoResults();\n    console.log('clicked')\n    var coordinates = e.latlng\n\n    const {markers} = this.state\n    \n    if (!routing) {\n      \n      makeReport(marker);\n      markers.push({\n        'name': 'route-mark', \n        'position': coordinates\n      })\n      \n    } else {\n      \n      markers.push({\n        'name': 'route-mark', \n        'position': coordinates\n      })\n      \n      if (markers.length == 2) {\n        createRoute(markers);\n      }\n    }\n    this.setState({markers})\n  }\n  \n\n\n  render() {\n    const { lat, lng, zoom } = this.state;\n    const position = [lat, lng];\n\n    return (\n      <Map className='map'\n        center={position} \n        zoom={zoom} \n\n        onClick={this.addMarker}\n        ref={this.saveMap}>\n\n        <TileLayer\n          // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          url=\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\"\n        />\n\n        {this.state.markers.map((location, idx) => (\n          <Marker \n            key={`marker-${idx}`} \n            position={location.position} \n            // icon={getIcon(location.name)}\n            >\n              \n            <Popup>\n              {location.name}\n            </Popup>\n          </Marker>\n        ))}\n\n      </Map>\n    );\n  }\n}\n\n\n\n\nexport default MapComponent;\n"]},"metadata":{},"sourceType":"module"}