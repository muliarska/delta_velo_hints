{"ast":null,"code":"var _jsxFileName = \"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/Map.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\nimport Routing from \"./RoutingMachine\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport './Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nvar routing = false;\nvar markers = [];\nvar control;\nvar modal = document.getElementById(\"myModal\");\nvar directionsStart = document.getElementById(\"directionsStart\");\nvar span = document.getElementsByClassName(\"close\")[0];\nvar badRoadReportButton = document.getElementById(\"badRoadReportButton\");\nvar accidentReportButton = document.getElementById(\"accidentReportButton\");\nvar parkingPlaceReportButton = document.getElementById(\"parkingPlaceReportButton\");\nvar closeButtonReport = document.getElementById(\"closeButtonReport\");\nvar cancelRouteButton = document.getElementById('cancelRouteButton');\nvar startMenuButton = document.getElementById('startMenuButton');\nvar startNewRouteButton = document.getElementById(\"startNewRouteButton\");\nvar closeButton = document.getElementById(\"closeButton\");\n\nfunction onLoad(e) {\n  // map.setView([coordinates], 8);\n  loadDirectionsStart();\n}\n\nfunction loadDirectionsStart(e) {\n  directionsStart.style.display = \"block\";\n}\n\nfunction makeReport(marker) {\n  var response = \"\";\n  modal.style.display = \"block\";\n\n  badRoadReportButton.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"badRoadReportButton\");\n    response = \"badRoadReportButton\";\n    marker.bindPopup(\"Bad Road\");\n    marker.setIcon(badRoadIcon);\n  };\n\n  accidentReportButton.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"accidentReportButton\");\n    response = \"accidentReportButton\";\n    marker.bindPopup(\"Accident\");\n    marker.setIcon(accidentIcon);\n  };\n\n  parkingPlaceReportButton.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"parkingPlaceReportButton\");\n    response = \"parkingPlaceReportButton\";\n    marker.bindPopup(\"Parking Place\");\n    marker.setIcon(parkingIcon);\n  };\n\n  closeButtonReport.onclick = function (event) {\n    modal.style.display = \"none\";\n    console.log(\"Closing\");\n    marker.remove();\n    startMenuButton.style.display = 'inline-block';\n  };\n\n  return response;\n}\n\nstartNewRouteButton.onclick = function (event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Starting new route\");\n  routing = true;\n};\n\ncloseButton.onclick = function (event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Closing start screen\");\n  startMenuButton.style.display = 'inline-block';\n}; // When the user clicks on <span> (x), close the modal\n\n\nspan.onclick = function () {\n  modal.style.display = \"none\";\n  directionsStart.style.display = \"none\";\n  startMenuButton.style.display = 'inline-block';\n}; // When the user clicks anywhere outside of the modal, close it\n\n\nwindow.onclick = function (event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n\n  if (event.target == directionsStart) {\n    directionsStart.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n};\n\nfunction createRoute(map) {\n  // const { map } = this.props;\n  let leafletElement = L.Routing.control({\n    router: L.Routing.mapbox(accessToken, {\n      unit: 'metric',\n      profile: 'mapbox/cycling',\n      language: 'en',\n      alternatives: true,\n      geometries: 'geojson',\n      controls: {\n        instructions: false\n      },\n      flyTo: false\n    }),\n    waypoints: [L.latLng(16.506, 80.648), L.latLng(17.384, 80.4866), L.latLng(12.971, 77.5945)],\n    // router: new L.Routing.Google(),\n    lineOptions: {\n      styles: [{\n        color: \"gray\",\n        opacity: 0.7,\n        weight: 6\n      }]\n    },\n    addWaypoints: false,\n    draggableWaypoints: true,\n    fitSelectedRoutes: false,\n    showAlternatives: true\n  }).addTo(map.leafletElement);\n  leafletElement.hide();\n}\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.saveMap = map => {\n      this.map = map;\n      this.setState({\n        isMapInit: true\n      }); // createRoute(this.map);\n\n      onLoad();\n    };\n\n    this.state = {\n      lat: 17.4,\n      lng: 78.4,\n      zoom: 7,\n      isMapInit: false\n    };\n  }\n\n  render() {\n    const {\n      lat,\n      lng,\n      zoom\n    } = this.state;\n    const position = [lat, lng];\n    return /*#__PURE__*/_jsxDEV(Map, {\n      center: position,\n      zoom: zoom,\n      ref: this.saveMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      , {\n        url: \"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), this.state.isMapInit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction add_marker(e) {\n  clearGeoResults();\n\n  if (!routing) {\n    var coordinates = [e.latlng.lat, e.latlng.lng];\n    var marker = L.marker(coordinates, {\n      icon: markerIcon\n    }) // .bindLabel('helloworld', { noHide: true })\n    .addTo(MapComponent.map);\n    makeReport(marker);\n  } else {\n    var coordinates = [e.latlng.lat, e.latlng.lng];\n    var marker = L.marker(coordinates, {\n      icon: blueIcon\n    }).addTo(map);\n    markers.push(marker);\n\n    if (markers.length == 2) {\n      getDirections(markers);\n    }\n  }\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/Map.js"],"names":["React","Component","useState","useEffect","Map","TileLayer","withLeaflet","MapControl","MapInfo","Routing","L","accessToken","routing","markers","control","modal","document","getElementById","directionsStart","span","getElementsByClassName","badRoadReportButton","accidentReportButton","parkingPlaceReportButton","closeButtonReport","cancelRouteButton","startMenuButton","startNewRouteButton","closeButton","onLoad","e","loadDirectionsStart","style","display","makeReport","marker","response","onclick","event","console","log","bindPopup","setIcon","badRoadIcon","accidentIcon","parkingIcon","remove","window","target","createRoute","map","leafletElement","router","mapbox","unit","profile","language","alternatives","geometries","controls","instructions","flyTo","waypoints","latLng","lineOptions","styles","color","opacity","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","addTo","hide","MapComponent","constructor","saveMap","setState","isMapInit","state","lat","lng","zoom","render","position","add_marker","clearGeoResults","coordinates","latlng","icon","markerIcon","blueIcon","push","length","getDirections"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\nimport Routing from \"./RoutingMachine\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport './Icons'\n\n\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\nvar routing = false;\nvar markers = [];\nvar control;\n\nvar modal = document.getElementById(\"myModal\");\nvar directionsStart = document.getElementById(\"directionsStart\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nvar badRoadReportButton = document.getElementById(\"badRoadReportButton\");\nvar accidentReportButton = document.getElementById(\"accidentReportButton\");\nvar parkingPlaceReportButton = document.getElementById(\"parkingPlaceReportButton\");\nvar closeButtonReport = document.getElementById(\"closeButtonReport\");\n\n\nvar cancelRouteButton = document.getElementById('cancelRouteButton');\nvar startMenuButton = document.getElementById('startMenuButton');\n\n\nvar startNewRouteButton = document.getElementById(\"startNewRouteButton\");\nvar closeButton = document.getElementById(\"closeButton\");\n\n\n\nfunction onLoad(e) {\n  // map.setView([coordinates], 8);\n  loadDirectionsStart();\n}\n\nfunction loadDirectionsStart (e) {\n  directionsStart.style.display = \"block\";\n}\n\n\nfunction makeReport(marker) {\n  var response = \"\";\n\n  modal.style.display = \"block\";\n\n  badRoadReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"badRoadReportButton\")\n    response = \"badRoadReportButton\"\n    marker.bindPopup(\"Bad Road\");\n    marker.setIcon(badRoadIcon);\n  }\n\n  accidentReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"accidentReportButton\")\n    response = \"accidentReportButton\"\n    marker.bindPopup(\"Accident\");\n    marker.setIcon(accidentIcon);\n  }\n\n  parkingPlaceReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"parkingPlaceReportButton\")\n    response = \"parkingPlaceReportButton\"\n    marker.bindPopup(\"Parking Place\");\n    marker.setIcon(parkingIcon);\n  }\n\n  closeButtonReport.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"Closing\")\n    marker.remove();\n    startMenuButton.style.display = 'inline-block';\n  }\n\n  return response;\n}\n\n\nstartNewRouteButton.onclick = function(event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Starting new route\");\n  routing = true;\n}\n\ncloseButton.onclick = function(event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Closing start screen\")\n  startMenuButton.style.display = 'inline-block';\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\n  modal.style.display = \"none\";\n  directionsStart.style.display = \"none\";\n  startMenuButton.style.display = 'inline-block';\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n  if (event.target == directionsStart) {\n    directionsStart.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n}\n\n\n\n\n\n\n\n\nfunction createRoute(map) {\n  // const { map } = this.props;\n  let leafletElement = L.Routing.control({\n    router: L.Routing.mapbox(accessToken, {\n      unit: 'metric',\n      profile : 'mapbox/cycling',\n      language: 'en',\n      alternatives: true,\n      geometries: 'geojson',\n      controls: { instructions: false },\n      flyTo: false\n    }),\n    waypoints: [\n      L.latLng(16.506, 80.648),\n      L.latLng(17.384, 80.4866),\n      L.latLng(12.971, 77.5945)\n    ],\n    // router: new L.Routing.Google(),\n    lineOptions: {\n      styles: [\n        {\n          color: \"gray\",\n          opacity: 0.7,\n          weight: 6\n        }\n      ]\n    },\n    addWaypoints: false,\n    draggableWaypoints: true,\n    fitSelectedRoutes: false,\n    showAlternatives: true\n  }).addTo(map.leafletElement);\n  leafletElement.hide();\n}\n\n\n\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: 17.4,\n      lng: 78.4,\n      zoom: 7,\n      isMapInit: false\n    };\n  };\n\n  \n  saveMap = (map) => {\n    this.map = map;\n    this.setState({\n      isMapInit: true\n    });\n\n\n    // createRoute(this.map);\n    onLoad();\n  };\n\n\n  render() {\n    const { lat, lng, zoom } = this.state;\n    const position = [lat, lng];\n\n    return (\n      <Map center={position} zoom={zoom} ref={this.saveMap}>\n        <TileLayer\n          // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          url=\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {this.state.isMapInit}\n      </Map>\n    );\n  }\n}\n\n\n\n\nfunction add_marker (e) {\n  clearGeoResults();\n\n  if (!routing) {\n\n    var coordinates = [e.latlng.lat, e.latlng.lng];\n    var marker = L.marker(coordinates, {icon: markerIcon})\n      // .bindLabel('helloworld', { noHide: true })\n      .addTo(MapComponent. map);\n  \n    makeReport(marker);\n\n  } else {\n\n    var coordinates = [e.latlng.lat, e.latlng.lng];\n    var marker = L.marker(coordinates, {icon: blueIcon})\n      .addTo(map);\n    markers.push(marker);\n\n    if (markers.length == 2) {\n      getDirections(markers);\n    }\n\n  }\n}\n\nexport default MapComponent;\n"]},"metadata":{},"sourceType":"module"}