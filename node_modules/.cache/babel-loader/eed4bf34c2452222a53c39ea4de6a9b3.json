{"ast":null,"code":"var _jsxFileName = \"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/Map.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nfunction createRoute(map) {\n  // const { map } = this.props;\n  let leafletElement = L.Routing.control({\n    router: L.Routing.mapbox(accessToken, {\n      unit: 'metric',\n      profile: 'mapbox/cycling',\n      language: 'en',\n      alternatives: true,\n      geometries: 'geojson',\n      controls: {\n        instructions: false\n      },\n      flyTo: false\n    }),\n    waypoints: [L.latLng(16.506, 80.648), L.latLng(17.384, 80.4866), L.latLng(12.971, 77.5945)],\n    // router: new L.Routing.Google(),\n    lineOptions: {\n      styles: [{\n        color: \"gray\",\n        opacity: 0.7,\n        weight: 6\n      }]\n    },\n    addWaypoints: false,\n    draggableWaypoints: true,\n    fitSelectedRoutes: false,\n    showAlternatives: true\n  }).addTo(map.leafletElement);\n  leafletElement.hide();\n}\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.saveMap = map => {\n      this.map = map;\n      this.setState({\n        isMapInit: true\n      });\n      createRoute(this.map); // Routing.apply(Routing.);\n      // var route = new Routing();\n      // route.createLeafletElement();\n    };\n\n    this.state = {\n      lat: 17.4,\n      lng: 78.4,\n      zoom: 7,\n      isMapInit: false\n    };\n  }\n\n  render() {\n    const {\n      lat,\n      lng,\n      zoom\n    } = this.state;\n    const position = [lat, lng];\n    return /*#__PURE__*/_jsxDEV(Map, {\n      center: position,\n      zoom: zoom,\n      ref: this.saveMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      , {\n        url: \"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), this.state.isMapInit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-branch/src/Map.js"],"names":["React","Component","useState","useEffect","Map","TileLayer","withLeaflet","MapControl","MapInfo","L","accessToken","createRoute","map","leafletElement","Routing","control","router","mapbox","unit","profile","language","alternatives","geometries","controls","instructions","flyTo","waypoints","latLng","lineOptions","styles","color","opacity","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","addTo","hide","MapComponent","constructor","saveMap","setState","isMapInit","state","lat","lng","zoom","render","position"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\n\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\n\n\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\nfunction createRoute(map) {\n  // const { map } = this.props;\n  let leafletElement = L.Routing.control({\n    router: L.Routing.mapbox(accessToken, {\n      unit: 'metric',\n      profile : 'mapbox/cycling',\n      language: 'en',\n      alternatives: true,\n      geometries: 'geojson',\n      controls: { instructions: false },\n      flyTo: false\n    }),\n    waypoints: [\n      L.latLng(16.506, 80.648),\n      L.latLng(17.384, 80.4866),\n      L.latLng(12.971, 77.5945)\n    ],\n    // router: new L.Routing.Google(),\n    lineOptions: {\n      styles: [\n        {\n          color: \"gray\",\n          opacity: 0.7,\n          weight: 6\n        }\n      ]\n    },\n    addWaypoints: false,\n    draggableWaypoints: true,\n    fitSelectedRoutes: false,\n    showAlternatives: true\n  }).addTo(map.leafletElement);\n  leafletElement.hide();\n}\n\n\n\n\n\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: 17.4,\n      lng: 78.4,\n      zoom: 7,\n      isMapInit: false\n    };\n  };\n\n\n  \n  saveMap = (map) => {\n    this.map = map;\n    this.setState({\n      isMapInit: true\n    });\n\n\n    createRoute(this.map);\n    // Routing.apply(Routing.);\n    // var route = new Routing();\n    // route.createLeafletElement();\n  };\n\n  render() {\n    const { lat, lng, zoom } = this.state;\n    const position = [lat, lng];\n\n    return (\n      <Map center={position} zoom={zoom} ref={this.saveMap}>\n        <TileLayer\n          // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          url=\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {this.state.isMapInit}\n      </Map>\n    );\n  }\n}\n\nexport default MapComponent;\n"]},"metadata":{},"sourceType":"module"}