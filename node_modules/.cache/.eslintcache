[{"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/index.js":"1","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/Map.js":"2","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/RoutingMachine.js":"3","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/MapInfo.js":"4","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/Icons.js":"5","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/views/SignUpView/index.jsx":"6","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/views/LoginView/index.jsx":"7","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/modules/Auth/components/Logo/index.jsx":"8","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/modules/Auth/components/SignUpForm/index.jsx":"9","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/modules/Auth/components/LoginForm/index.jsx":"10"},{"size":705,"mtime":1620324102406,"results":"11","hashOfConfig":"12"},{"size":7875,"mtime":1620323415802,"results":"13","hashOfConfig":"12"},{"size":1456,"mtime":1620294456577,"results":"14","hashOfConfig":"12"},{"size":903,"mtime":1620294748110,"results":"15","hashOfConfig":"12"},{"size":2369,"mtime":1620327153373,"results":"16","hashOfConfig":"12"},{"size":310,"mtime":1620323946776,"results":"17","hashOfConfig":"12"},{"size":305,"mtime":1620328730356,"results":"18","hashOfConfig":"12"},{"size":117,"mtime":1620323946680,"results":"19","hashOfConfig":"12"},{"size":858,"mtime":1620323946684,"results":"20","hashOfConfig":"12"},{"size":800,"mtime":1620328923641,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"y407vp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/index.js",[],["45","46"],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/Map.js",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { Component, useState, useEffect, useRef } from \"react\";\nimport { Map, TileLayer, withLeaflet, MapControl, Marker, Popup, LeafletConsumer, MapLayer } from \"react-leaflet\";\nimport MapInfo from \"./MapInfo\";\nimport Routing from \"./RoutingMachine\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport './Icons'\n\n\nconst accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\nvar routing = false;\nvar markers = [];\nvar control;\nvar map = NaN;\n\nvar route = NaN;\n\nvar modal = document.getElementById(\"myModal\");\nvar directionsStart = document.getElementById(\"directionsStart\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nvar badRoadReportButton = document.getElementById(\"badRoadReportButton\");\nvar accidentReportButton = document.getElementById(\"accidentReportButton\");\nvar parkingPlaceReportButton = document.getElementById(\"parkingPlaceReportButton\");\nvar closeButtonReport = document.getElementById(\"closeButtonReport\");\n\n\nvar cancelRouteButton = document.getElementById('cancelRouteButton');\nvar startMenuButton = document.getElementById('startMenuButton');\n\n\nvar startNewRouteButton = document.getElementById(\"startNewRouteButton\");\nvar closeButton = document.getElementById(\"closeButton\");\n\n\nfunction onLoad(e) {\n  // map.setView([coordinates], 8);\n  loadDirectionsStart();\n}\n\nfunction loadDirectionsStart (e) {\n  directionsStart.style.display = \"block\";\n}\n\nfunction startMenu() {\n  console.log(\"starting menu\");\n  cancelRouteButton.style.display = 'none';\n  startMenuButton.style.display = 'none';\n  loadDirectionsStart();\n}\n\nfunction cancelRoute(layer) {\n  console.log(\"canceling route\");\n  cancelRouteButton.style.display = 'none';\n  startMenuButton.style.display = 'inline-block';\n\n  if (route) {\n    route.removeRoute(route)\n  }\n}\n\n\n\nfunction makeReport(markers) {\n  var response = \"\";\n\n  modal.style.display = \"block\";\n\n  badRoadReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"badRoadReportButton\")\n    response = \"badRoadReportButton\"\n    // marker.bindPopup(\"Bad Road\");\n    // marker.setIcon(badRoadIcon);\n  }\n\n  accidentReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"accidentReportButton\")\n    response = \"accidentReportButton\"\n    // marker.bindPopup(\"Accident\");\n    // marker.setIcon(accidentIcon);\n  }\n\n  parkingPlaceReportButton.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"parkingPlaceReportButton\")\n    response = \"parkingPlaceReportButton\"\n    // marker.bindPopup(\"Parking Place\");\n    // marker.setIcon(parkingIcon);\n  }\n\n  closeButtonReport.onclick = function(event) {\n    modal.style.display = \"none\";\n    console.log(\"Closing\")\n    startMenuButton.style.display = 'inline-block';\n    markers.pop();\n  }\n\n  return response;\n}\n\n\nstartNewRouteButton.onclick = function(event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Starting new route\");\n  routing = true;\n  cancelRouteButton.style.display = 'inline-block';\n  startMenuButton.style.display = 'none';\n}\n\ncloseButton.onclick = function(event) {\n  directionsStart.style.display = \"none\";\n  console.log(\"Closing start screen\")\n  startMenuButton.style.display = 'inline-block';\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\n  modal.style.display = \"none\";\n  directionsStart.style.display = \"none\";\n  startMenuButton.style.display = 'inline-block';\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n  else if (event.target == directionsStart) {\n    directionsStart.style.display = \"none\";\n    startMenuButton.style.display = 'inline-block';\n  }\n}\n\n\n\nstartMenuButton.onclick = function(event) {\n  startMenu();\n}\n\ncancelRouteButton.onclick = function(event) {\n  cancelRoute(map);\n}\n\n\nclass Route {\n  constructor(markers) {\n    // super();\n    this.route = NaN;\n    this.markers = markers;\n    this.createRoute();\n  }\n\n  createRoute() {\n    this.route = L.Routing.control({\n      router: L.Routing.mapbox(accessToken, {\n        unit: 'metric',\n        profile : 'mapbox/cycling',\n        language: 'en',\n        alternatives: true,\n        geometries: 'geojson',\n        controls: { instructions: false },\n        flyTo: false\n      }),\n      waypoints: [\n        L.latLng(this.markers[0]['position']),\n        L.latLng(this.markers[1]['position'])\n      ],\n      lineOptions: {\n        styles: [\n          {\n            color: \"gray\",\n            opacity: 0.7,\n            weight: 6\n          }\n        ]\n      },\n      addWaypoints: false,\n      draggableWaypoints: false,\n      fitSelectedRoutes: false,\n      showAlternatives: true\n    }).addTo(map.leafletElement);\n    this.route.hide();\n\n    // handleFlyTo();\n    // function handleFlyTo() {\n      // const { current = {} } = useRef();\n      // const { leafletElement: map } = useRef(null);\n      // map.flyTo(markers[0]['position'], 14);\n    // }\n\n    routing = false;\n    // .flyTo(markers[0]['position']);\n\n    return this.route;\n  }\n\n  removeRoute() {\n    this.route.remove();\n  }\n}\n\n\n\nfunction getIcon(name) {\n  return L.icon({\n    iconUrl: require('./marker_icons/' + name + '.png'),\n    iconSize: [40, 40]\n  })\n}\n\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n\n    this.state = {\n      lat: 49.918313,\n      lng: 24.182573,\n      zoom: 8,\n      isMapInit: false,\n\n      markers: [],\n      routing_markers: []\n\n    };\n  };\n  \n  saveMap = (layer) => {\n    map = layer;\n    this.setState({\n      isMapInit: true\n    });\n\n    onLoad();\n  };\n\n  forceUpdateHandler(){\n    this.forceUpdate();\n  };\n\n\n  addMarker = (e) => {\n    // clearGeoResults();\n    console.log('clicked')\n    var coordinates = e.latlng\n    \n    if (!routing) {\n      const {markers} = this.state\n      \n      const resp = makeReport(markers);\n      this.forceUpdateHandler();\n      console.log(resp)\n      markers.push({\n        'name': 'marker', \n        'position': coordinates\n      })\n      this.setState({markers})\n      \n    } else {\n      var {routing_markers} = this.state\n\n      routing_markers.push({\n        'name': 'badRoad', \n        'position': coordinates\n      })\n      \n      if (routing_markers.length == 2) {\n        route = new Route(routing_markers);\n        routing_markers = []\n      }\n      this.setState({routing_markers})\n    }\n  }\n\n\n\n  render() {\n    const { lat, lng, zoom } = this.state;\n    const position = [lat, lng];\n\n    return (\n      <Map className='map'\n        center={position} \n        zoom={zoom} \n\n        onClick={this.addMarker} \n        ref={this.saveMap}\n\n        >\n\n\n        <TileLayer\n          // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          url=\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2xhdmtvcHJ5dHVsYSIsImEiOiJja281cnRmdjQwODl5MnZwZGdmeW1hb3N3In0.mhPtHgPEkyIHhGCQcNJNlA\"\n        />\n\n        {this.state.markers.map((location, idx) => (\n          <Marker \n            key={`marker-${idx}`} \n            position={location.position} \n            // icon={getIcon(location.name)}\n            >\n              \n            <Popup>\n              {location.name}\n            </Popup>\n          </Marker>\n        ))}\n\n\n        {/* {this.state.routing_markers.map((location, idx) => (\n          <Marker \n            key={`marker-${idx}`} \n            position={location.position} \n            // icon={getIcon(location.name)}\n            >\n              \n            <Popup>\n              {location.name}\n            </Popup>\n          </Marker>\n        ))} */}\n\n      </Map>\n    );\n  }\n}\n\n\n\n\nexport default MapComponent;\n","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/RoutingMachine.js",[],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/MapInfo.js",["63","64","65"],"import React, { Component } from \"react\";\nimport { withLeaflet, MapControl } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass MapInfo extends MapControl {\n  constructor(props, context) {\n    super(props);\n    props.leaflet.map.addEventListener(\"mousemove\", ev => {\n      this.panelDiv.innerHTML = `<h2><span>Lat: ${ev.latlng.lat.toFixed(\n        4\n      )}</span>&nbsp;<span>Lng: ${ev.latlng.lng.toFixed(4)}</span></h2>`;\n      console.log(this.panelDiv.innerHTML);\n    });\n  }\n\n  createLeafletElement(opts) {\n    const dir = window.MQ.routing.directions();\n    dir.route({\n      locations: [\"Hyderabad\", \"Tirupati\", \"Chennai\"]\n    });\n    return () =>\n      window.MQ.routing.routeLayer({\n        directions: dir,\n        fitBounds: true\n      });\n  }\n\n  componentDidMount() {\n    const { map } = this.props.leaflet;\n    this.leafletElement.addTo(map);\n  }\n}\n\nexport default withLeaflet(MapInfo);\n","/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/Icons.js",[],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/views/SignUpView/index.jsx",[],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/views/LoginView/index.jsx",[],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/modules/Auth/components/Logo/index.jsx",[],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/modules/Auth/components/SignUpForm/index.jsx",[],"/home/slavko/Desktop/UCU_ files/Homework/Year_02/Part 02/WebDesign/React/main-velo-hints/src/modules/Auth/components/LoginForm/index.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"75","line":1,"column":38,"nodeType":"72","messageId":"73","endLine":1,"endColumn":47},{"ruleId":"70","severity":1,"message":"76","line":1,"column":49,"nodeType":"72","messageId":"73","endLine":1,"endColumn":55},{"ruleId":"70","severity":1,"message":"77","line":2,"column":26,"nodeType":"72","messageId":"73","endLine":2,"endColumn":37},{"ruleId":"70","severity":1,"message":"78","line":2,"column":39,"nodeType":"72","messageId":"73","endLine":2,"endColumn":49},{"ruleId":"70","severity":1,"message":"79","line":2,"column":66,"nodeType":"72","messageId":"73","endLine":2,"endColumn":81},{"ruleId":"70","severity":1,"message":"80","line":2,"column":83,"nodeType":"72","messageId":"73","endLine":2,"endColumn":91},{"ruleId":"70","severity":1,"message":"81","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},{"ruleId":"70","severity":1,"message":"82","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":15},{"ruleId":"70","severity":1,"message":"83","line":14,"column":5,"nodeType":"72","messageId":"73","endLine":14,"endColumn":12},{"ruleId":"70","severity":1,"message":"84","line":15,"column":5,"nodeType":"72","messageId":"73","endLine":15,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":129,"column":20,"nodeType":"87","messageId":"88","endLine":129,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":133,"column":25,"nodeType":"87","messageId":"88","endLine":133,"endColumn":27},{"ruleId":"70","severity":1,"message":"89","line":209,"column":10,"nodeType":"72","messageId":"73","endLine":209,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":273,"column":34,"nodeType":"87","messageId":"88","endLine":273,"endColumn":36},{"ruleId":"70","severity":1,"message":"90","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"91","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":9},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'withLeaflet' is defined but never used.","'MapControl' is defined but never used.","'LeafletConsumer' is defined but never used.","'MapLayer' is defined but never used.","'MapInfo' is defined but never used.","'Routing' is defined but never used.","'markers' is assigned a value but never used.","'control' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getIcon' is defined but never used.","'React' is defined but never used.","'L' is defined but never used.","no-global-assign","no-unsafe-negation"]